....... Kubernetes Interview Question .....
1. What is Kubernetes, and why is it used?
2. Explain the components of the Kubernetes master and worker nodes.
3. What are Pods in Kubernetes?
4. What is the difference between a Pod and a Node?
5. What is a Namespace, and why is it used?
6. How does Kubernetes handle Pod failures?
7. What are the different types of workloads in Kubernetes?
8. How does a Deployment work?
9. What is a StatefulSet, and when would you use it?
10. Explain DaemonSets and provide a use case for them.
11. What is the difference between ReplicationController, ReplicaSet, and Deployment?
12. What is a Service in Kubernetes, and what are the different types?
13. How does Kubernetes manage internal and external networking?
14. What is a ClusterIP, NodePort, and LoadBalancer Service?
15. Explain Ingress in Kubernetes and its use case.
16. How does DNS work within a Kubernetes cluster?
17. What are Persistent Volumes (PVs) and Persistent Volume Claims (PVCs)?
18. Explain the process of binding a PV to a PVC.
19. What is a StorageClass, and how does it relate to dynamic provisioning?
20. How are ConfigMaps used in Kubernetes?
21. What is the difference between ConfigMaps and Secrets?
22. How can you securely manage secrets in Kubernetes?
23. How do you scale Pods in Kubernetes?
24. What is the Horizontal Pod Autoscaler (HPA), and how does it work?
25. How does Cluster Autoscaler differ from HPA?
26. What is Role-Based Access Control (RBAC) in Kubernetes?
27. Explain the difference between Role and ClusterRole.
28. What is a ServiceAccount, and why would you use it?
29. How can you implement network policies for Pod communication?
30. How do you monitor Kubernetes clusters?
31. What tools would you use to monitor and log Kubernetes applications?
32. What is node affinity?
33. What is StaticPods?
34. What is Taint and Toleration?
35. What is Sidecar Containers and their purpose?
36. How to debug specific container logs?Consider there are 2 containers running inside a single pod?
37. What are the different deployment strategies in Kubernetes?
38. Describe the process of rolling update in Kubernetes?

------------------------------


1. **What is Kubernetes, and why is it used?**
**Answer:** Kubernetes is an open-source container orchestration platform that automates the deployment, scaling, and management of containerized applications. Itâ€™s used to improve application reliability and scalability while simplifying operations.
 2. **Can you explain the concept of Pods in Kubernetes?**
**Answer:** A Pod is the smallest deployable unit in Kubernetes. It can contain one or more containers that share the same network namespace and storage. Pods allow co-located applications to share resources and communicate efficiently.

 3. **What are Deployments, and how do they differ from ReplicaSets?**
**Answer:** A Deployment is a higher-level abstraction that manages the creation and updating of Pods. It ensures that the desired number of Pods is running at all times. ReplicaSets, on the other hand, maintain a stable set of replica Pods, ensuring the specified number of Pods are running but without providing the deployment capabilities.

 4. **What is a Service in Kubernetes?**
**Answer:** A Service in Kubernetes is an abstraction that defines a logical set of Pods and a policy for accessing them. It provides stable network endpoints and load balancing, allowing Pods to communicate with each other regardless of their IP addresses.

5. **How does Kubernetes handle configuration management?**
**Answer:** Kubernetes uses ConfigMaps and Secrets to manage configuration data. ConfigMaps store non-sensitive data, while Secrets are used to store sensitive information like passwords or API keys, ensuring that these values are secured and accessed securely by Pods.